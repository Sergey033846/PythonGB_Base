# определить с помощью рекурсии полиндром или нет слово

# def is_polindrom(s) -> bool:
#     if len(s) <= 1:
#         return True
    
#     if s[0] == s[-1]:
#         # print(s[1:-1])
#         return is_polindrom(s[1:-1])        
    
#     return False

# word = '12321'

# print(is_polindrom(word))

# ----------------------------------------------------------------------------------------------

# Задача No45. Решение в группах
# Два различных натуральных числа n и m называются дружественными, 
# если сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот. 
# Например, 220 и 284 – дружественные числа. 
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. 
# Программа получает на вход одно натуральное число k, не превосходящее 105. 
# Программа должна вывести все пары дружественных чисел, каждое из которых не превосходит k. 
# Пары необходимо выводить по одной в строке, разделяя пробелами. 
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).
# Ввод: Вывод:
# 300 220 284

x = 10000

dict_1 = {}

for i in range(1, x):
    for j in range(1, i//2 + 1):        
        if i % j == 0:
            dict_1[i] = dict_1.get(i, 0) + j

for i, sumdiv in dict_1.items():
    if i < sumdiv and i == dict_1.get(sumdiv, False) and sumdiv == dict_1[i]:
        print(i, sumdiv)

# вывод совершенных чисел
# for i, sumdiv in dict_1.items():
#     if i == sumdiv:
#         print(i, sumdiv)
